@startuml
"Client"->"DelegationController":getMyDelegations(Timestamp from, Timestamp to, String status)
alt filtering by date and status
    "DelegationController"->DelegationService:getDelegationsByUserId(Long userId, Timestamp from, Timestamp to, String status)
    database DB
    DelegationService->DB:query
    DB-->DelegationService:result
    DelegationService-->"DelegationController":Iterable<Delegation> delegations
else filtering by date
    "DelegationController"->DelegationService:getDelegationsByUserId(Long userId, Timestamp from, Timestamp to)
    DelegationService->DB:query
    DB-->DelegationService:result
    DelegationService-->"DelegationController":Iterable<Delegation> delegations
else flitering by status
    "DelegationController"->DelegationService:getDelegationsByUserId(Long userId, String status)
    DelegationService->DB:query
    DB-->DelegationService:result
    DelegationService-->"DelegationController":Iterable<Delegation> delegations
else without filtering - all delegations
    "DelegationController"->DelegationService:getDelegationsByUserId(Long userId)
    DelegationService->DB:query
    DB-->DelegationService:result
    DelegationService-->"DelegationController":Iterable<Delegation> delegations
end
"DelegationController"-->Client:Iterable<DelegationDTO> delegationDtos
@enduml